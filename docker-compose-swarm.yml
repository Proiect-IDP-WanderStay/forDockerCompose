version: '3.8'

services:
  web:
    image: robertzz/idp_project_database_api:latest
    command: python manage.py run -h 0.0.0.0
    ports:
      - "6000:5000"
    deploy:
      replicas: 2
      placement:
          max_replicas_per_node: 1
      update_config:
          order: start-first
      rollback_config:
          order: stop-first
    depends_on:
      - db
    environment:
      - FLASK_DEBUG=1
      - DATABASE_URL=postgresql://hello_flask:hello_flask@db:5432/hello_flask_dev
      - SQL_HOST=db
      - SQL_PORT=5432
      - DATABASE=postgres
      - FLASK_APP=project/__init__.py
    networks:
      - network-database-UserAPI-DatabaseAPI
      - network-BusinessLogic-DatabaseAPI
      - internal

  user:
    image: robertzz/idp_project_user_api:latest
    command: python manage.py run -h 0.0.0.0
    ports:
      - "6758:5000"
    environment:
      - FLASK_DEBUG=1
      - DATABASE_URL=postgresql://hello_flask:hello_flask@db:5432/hello_flask_dev
      - SQL_HOST=db
      - SQL_PORT=5432
      - DATABASE=postgres
      - FLASK_APP=user/__init__.py
      - SECRET_KEY="small_secret"
    depends_on:
      - db
    networks:
      - network-database-UserAPI-DatabaseAPI
      - network-UserLogic-UserAPI
    deploy:
      replicas: 2
      placement:
          max_replicas_per_node: 1
      update_config:
          order: start-first
      rollback_config:
          order: stop-first

  
  db:
    image: postgres:13
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_flask
      - POSTGRES_PASSWORD=hello_flask
      - POSTGRES_DB=hello_flask_dev
    deploy:
      placement:
          constraints:
              - "node.role==manager"
    networks:
      - network-database-admin
      - network-database-UserAPI-DatabaseAPI
      - internal

  pg-admin:
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - "5050:80"
    networks:
      - network-database-admin
      - internal

  kong:
    image: kong:latest
    volumes:
      - ./Kong:/usr/local/kong/declarative 
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 80:8000
      - 443:8443
      - 8001:8001
      - 8444:8444
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - internal


volumes:
  db_data:

networks:
  network-database-admin:
  network-database-UserAPI-DatabaseAPI:
  network-BusinessLogic-DatabaseAPI:
  network-UserLogic-UserAPI:
  internal:
  logging:


